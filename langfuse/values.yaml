# ------------ Core options

# By default, the postgres subchart will be installed and the connection set up.
# Specify postgresql.enabled: false and provide this value to use an existing Postgres
# installation or to set it up manually.
databaseURL: ""

# Used for migrations
directURL: ""

# This one must agree with the app's URL for OAuth to work
nextauthURL: http://localhost:3000

# Several toggles for Langfuse functionality
toggles:
  disablePublicSignup: false
  experimentalFeatures: false
  telemetry: true

# This secret's fields (in the ENV_VAR: value format) are added to the Langfuse config
additionalConfigurationSecret:


# ------------ Postgres subchart

postgresql:
  # Setting this to false will prevent automatic installation of the Postgresql subchart
  enabled: false

  auth:
    # You can set up the authentication in advance by creating this secret
    # If it's missing and postgresql.secret.create is true it will be created
    existingSecret: "{{ .Release.Name }}-postgres-secret"
    username: langfuse-user
    database: "{{ .Release.Name }}"

  secret:
    # If false, you are expected to manage the secret yourself.
    # If true, random values are saved in the secret named in postgresql.auth.existingSecret
    # for all the missing keys (existing values for these keys are preserved).
    createIfMissing: true
    # Set this to false if you want the secret to be deleted with `helm delete`
    # This has no effect unless createIfMissing is also true.
    # Warning: reinstalling the chart will generate a new password, but Postgres will 
    # continue to use an old password since it's stored on the PVC.
    alwaysKeepWhenUninstalled: true
    
  

# ------------ Standard values generated by helm create

replicaCount: 1

image:
  repository: ghcr.io/langfuse/langfuse
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
