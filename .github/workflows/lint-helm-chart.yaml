name: Test Helm Charts

on: # yamllint disable-line rule:truthy
  push:
    branches: ["*"]

  jobs:
    lint-with-kubeconform:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - name: Prepare a charts folder
          run: |
            mkdir -p charts
            for dir in $(ls -d */); do
                if [[ $dir != charts/ && $dir != .* ]] ; then
                    helm dependency build $dir          
                    mv $dir charts/
                fi
            done

        - name: Login to GitHub Container Registry
          uses: docker/login-action@v1
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Add necessary repos
          run: |
            helm repo add bitnami https://charts.bitnami.com/bitnami

        - name: Generate and validate releases
          uses: docker://ghcr.io/shivjm/helm-kubeconform-action:v0.2.0
          env:
            CHARTS_DIRECTORY: charts
            HELM_UPDATE_DEPENDENCIES: false
            LOG_LEVEL: trace
            LOG_JSON: false

  lint-test-with-ct:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@3
        with:
          version: v3.13.0

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@5
        with:
          python-version: 3.11

      - name: Set up chart-testing
        uses: helm/chart-testing-action@3.10

      - name: Copy the config file
        run: cp .github/linters/chart-testing.yaml ct.yaml

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config )
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        run: ct lint

      - name: Create kind cluster
        uses: helm/kind-action@1.8.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Run chart-testing (install)
        run: ct install
